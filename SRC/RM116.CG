[ POLICE QUEST 
[ rm116.cg 
[ By:  Greg Rowland, Jim Walls and Al Lowe
[ For: Sierra On-Line Inc. 9/25/86
[ Last Update September 26, 1987al

[ lgc.lytton.news


%include "gamedefs"
%include "rm116.msg"



%define	LAST_PAGE			4


[ Room setup 


if (init.log)
	{
	page = 1;
	start.motion( ego);
	set( refresh);

	load.view( v.photo);

	load.pic( current.room);
	draw.pic( current.room);
	discard.pic( current.room);

	show.pic( );
	status.line.off( );
	reset( enable.menu);
	}


[ Text scrolling 

if ((ego.dir || refresh))
	{
	reset( refresh);

	if ((ego.dir == ego.right ||
		ego.dir == ego.down.right ||
		ego.dir == ego.down))
		{
		++page;
		if (page > LAST_PAGE)
			{
			page = 1;
			}
		}

	if ((ego.dir == ego.up ||
		ego.dir == ego.up.right ||
		ego.dir == ego.left))
		{
		--page;
		if (!page)
			{
			page = LAST_PAGE;
			}
		}

	if (ego.dir == ego.up.left)
		{
		page = 1;
		}

	if (ego.dir == ego.down.left)
		{
		page = LAST_PAGE;
		}

	start.motion( ego);
	set.text.attribute( BG_COLOR, TEXT_COLOR);


	if (page == 1) {
		clear.text.rect( 2, 1, 21, 38, 15);
		display(  3, 1,  1);

		display(  5, 1,  2);
		
		display(  7, 1,  3);
		display(  8, 1,  4);
		display(  9, 1,  5);
		display( 10, 1,  6);
		display( 11, 1,  7);
		display( 12, 1,  8);
		display( 13, 1,  9);
		display( 14, 1, 10);
		display( 15, 1, 11);
		display( 16, 1, 12);
		display( 17, 1, 13);
		display( 18, 1, 14);
		
		display( 20, 1, 15);

		if (hercules)
			{
			add.to.pic( v.photo, 0, 0, 93, 83, 4, 4);
			}
		else {
			add.to.pic( v.photo, 0, 0, 93, 91, 4, 4);
			}

		}



	if (page == 2) {
		clear.text.rect( 2, 1, 21, 38, 15);
		display(  3, 1, 16);
		
		display(  5, 1, 17);
		display(  6, 1, 18);
		display(  7, 1, 19);
		display(  8, 1, 20);
		display(  9, 1, 21);
		display( 10, 1, 22);
		display( 11, 1, 23);
		display( 12, 1, 24);
		display( 13, 1, 25);
		display( 14, 1, 26);
		display( 15, 1, 27);
		display( 16, 1, 28);
		display( 17, 1, 29);
		display( 18, 1, 30);
		
		display( 20, 1, 31);
		}


	
	if (page == 3) {
		clear.text.rect( 2, 1, 21, 38, 15);
		display(  3, 1, 32);
		
		display(  5, 1, 33);
		display(  6, 1, 34);
		display(  7, 1, 35);
		display(  8, 1, 36);
		display(  9, 1, 37);
		display( 10, 1, 38);
		display( 11, 1, 39);
		display( 12, 1, 40);
		display( 13, 1, 41);
		display( 14, 1, 42);
		display( 15, 1, 43);
		display( 16, 1, 44);
		display( 17, 1, 45);
		display( 18, 1, 46);
		
		display( 20, 1, 47);
		}


	
	if (page == 4) {
		clear.text.rect( 2, 1, 21, 38, 15);
		display(  3, 1, 48);
		
		display(  5, 1, 49);
		display(  6, 1, 50);
		display(  7, 1, 51);
		display(  8, 1, 52);
		display(  9, 1, 53);
		display( 10, 1, 54);
		display( 11, 1, 55);
		display( 12, 1, 56);
		display( 13, 1, 57);
		display( 14, 1, 58);
		display( 15, 1, 59);
		display( 16, 1, 60);
		display( 17, 1, 61);
		display( 18, 1, 62);
		display( 19, 1, 63);
		display( 20, 1, 64);
	  	add.to.pic( v.photo, 0, 1, 93, 83, 4, 4);
		}

	set.text.attribute( TEXT_COLOR, BG_COLOR);

	}



[ Text response 


if (have.input) {
	set( refresh);
	}

if ((said( put, paper, rol) ||
	said( put, down, paper, rol) ||
	said( look, away, rol) ||
	said( look, room, rol) ||
	said( return, paper, rol) ||
	said( stop, reading, rol) ||
	said( stop, looking) ||
	said( stop, paper) ||
	said( close, paper)))
	{
	new.room( 4);					[rm.squad
	}


if ((said( previous, page, rol) ||
	said( turn, previous, page, rol) ||
	said( look, previous, page, rol)))
	{
	set( refresh);
	print( 65);
	--page;
	if (!page)
		{
		page = LAST_PAGE;
		}
	}

if ((said( turn, page, rol) ||
	said( look, page, rol) ||
	said( go, page, rol)))
	{
	set( refresh);
	print( 65);
	++page;
	if (page > LAST_PAGE)
		{
		page = 1;
		}
	}

if (said( read, paper))
	{
	print( 67);
	}



[
:exit
[

